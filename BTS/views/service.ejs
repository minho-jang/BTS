<!DOCTYPE html>
<html>

<head>
    <title>BTS</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="/css_service/bootstrap.min.css">
    <link rel="stylesheet" href="/css_service/style.css">
    <link rel="stylesheet" href="/css/custom.css">
    <link rel='stylesheet' href='/css/style.css' />

</head>

<body>
    <nav class="navbar navbar-default top-bar affix" data-spy="affix" data-offset-top="250"
        style="background-color: #000">
        <div class="container">
            <!- Brand and toggle get grouped for better mobile display ->
                <div class="navbar-header page-scroll">
                    <button data-target="#bs-example-navbar-collapse-1" data-toggle="collapse" class="navbar-toggle"
                        type="button">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a href="/" class="navbar-brand">BTS</a>
                </div>
        </div>
        <!- /.container-fluid ->
    </nav>

    <div id="section2">
        <!-- Start Blog Area -->
        <section id="blog-area">
            <div class="container">
                <div class="row inner">
                    <div class="col-lg-6">
                        <div class="blog-content player-center">
                            <div id="player"></div>
                        </div>
                        <div>&nbsp;</div>
                        <div class="blog-content">
                            <div>
                                <p id="video_title"></p>
                            </div>
                        </div>
                        <div>&nbsp;</div>
                    </div>

                    <div class="col-lg-6">
                        <div class="blog-content">
                            <div id="contain">
                                <table id="table_scroll">
                                    <tbody>
                                        <%
                                        for(var i=0; i<word.length; i++)
                                        {
                                            var data = word[i][1];
                                            var time = word[i][0];
                                        %>
                                        <tr>
                                            <td style="display:none;" id=<%="time"+i%>> <%=time%></td>
                                            <td id=<%=i%>> <%=data%></td>
                                        </tr>
                                        <%}%>
                              </tbody>
                              </table>
                            </div>
							
						</div>
					</div>
				</div>
			</div>
		</section>
		<!-- End Blog Area -->
    </div>
    
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>

<script type="text/javascript">
    // 태형 작성영역
    var tableID = 0;
    var youtubeCurrentTime;
    var timeList = [];
    var mouseIsOn = false;

    //메인 함수 실행
    mainFunction();

    // 번역영역 마우스 리스너
    $(document).ready(function () {
        $("#contain").mouseover(function () {
            mouseIsOn = true;
        }).mouseout(function () {
            mouseIsOn = false;
        });
    });

    //메인함수
    function mainFunction() {
        //tr태그 개수
        var trSize = $("#table_scroll tr").length;
        //tr태그의 데이터 받기
        for (var i = 0; i < trSize; i++) {
            timeList[i] = document.getElementById("time" + i).innerText;
        }
        //0.1초마다 함수 실행
        var timerId = setInterval(updateYoutubeTime, 1000);
    }

    function updateYoutubeTime() {
        youtubeCurrentTime = getCurrentTime();
        console.log("currentYoutube time : " + youtubeCurrentTime);

        // 이전 자막영역 하이라이팅 풀기
        var beforeTarget = document.getElementById(tableID);
        beforeTarget.style.backgroundColor = "#FFFFFF";


        //시간으로 자막 id찾기
        var new_tableID = findIDtoTime(youtubeCurrentTime);

        //마우스가 안들어오면 변경된 id로 중앙 정렬
        if (!mouseIsOn)
            TransitionToId(tableID, new_tableID);

        // 변경된 자막영역 하이라이팅하기
        var target = document.getElementById(new_tableID);
        target.style.backgroundColor = "#ed3a86";

        console.log("tableID , newtableID : " + tableID + " " + new_tableID)

        tableID = new_tableID;
    }

    //유튜브 시간으로 자막 id찾기
    function findIDtoTime(time) {
        var next_id = 0;

        for (var i = 0; i < timeList.length; i++) {
            if (time < timeList[i]) {
                next_id = i - 1;
                break;
            }
        }
        return next_id;
    }

    function TransitionToId(id, newid) {
        var zeroidPos = $('#0').position().top;
        var idPos = $('#' + id).position().top;
        var newidPos = $('#' + newid).position().top;
        var transLength = newidPos - idPos;
        var zerotoid = idPos - zeroidPos;

        //천천히 해당 위치로 이동
        $("#contain").animate({
            scrollTop: transLength + zerotoid - 100
        }, 300);
    }

    // 유튜브 영상 조작 js
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '300',
            width: '500',
            videoId: '<%= youtube_id %>',
            events: {
                'onReady': onPlayerReady,
                // 'onStateChange': onPlayerStateChange
            }
        });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
        document.getElementById("video_title").innerText =
            player.getVideoData().title;
        console.log(player.getVideoData().title);
    }

    // 5. The API calls this function when the player's state changes.
    // The function indicates that when playing a video (state=1),
    // the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }

    function stopVideo() {
        player.stopVideo();
    }

    // Returns the elapsed time in seconds since video started
    function getCurrentTime() {
        return player.getCurrentTime();
    }

    // Returns the playtime of the video
    function getDuration() {
        return player.getDuration();
    }

    // Returns the url of the video
    function getUrl() {
        return player.getVideoUrl();
    }
</script>

<style>
    .blog-content {
        min-width: 100%;
        padding-top: 25px;
    }

    .player-center {
        text-align: center;
    }

    #video_title {
        margin: 0;
        padding: 0 30px 0 30px;
        font-size: 20pt;
    }
</style>
</body>

</html>